name: Build and deploy Python app to Azure Web App - Imanagement

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest  # Ensure pytest is installed

      - name: Debug: Verify Python and pip versions
        run: |
          source venv/bin/activate
          python --version
          pip --version

      - name: Debug: List files in repository
        run: |
          ls -R

      - name: Debug: List installed packages
        run: |
          source venv/bin/activate
          pip list

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest --verbose  # Adjust this command to suit your test framework
        shell: /usr/bin/bash -e {0}
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.11.9/x64
          PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.11.9/x64/lib/pkgconfig
          Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.9/x64
          Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.9/x64
          Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.11.9/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.9/x64/lib

      - name: Zip artifact for deployment
        run: |
          zip -r release.zip ./* -x 'venv/*'

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'Imanagement'
          package: release.zip

      - name: Verify deployment
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" ${{ steps.deploy-to-webapp.outputs.webapp-url }})
          if [ "$response" != "200" ]; then
            echo "Deployment failed with status code $response"
            exit 1
          fi
